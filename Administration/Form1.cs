using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Administration {
    public partial class Form1 : Form {

        string magic = "LapinAntimalware";
        public static string filePath = string.Empty;

        public Form1() {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e) {

        }

        private void ToolStripButton1_Click(object sender, EventArgs e) {
            Form2 f2 = new Form2();
            f2.Show();
        }

        private void DataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e) {

        }

        private void Button1_Click(object sender, EventArgs e) {
            MessageBox.Show("todo");
        }

        private void ToolStripSplitButton1_Click(object sender, EventArgs e) {

        }

        private void СоздатьToolStripMenuItem_Click(object sender, EventArgs e) {

        }

        private void ОткрытьToolStripMenuItem_Click(object sender, EventArgs e) {
         /*   var fileContent = string.Empty;
            var filePath = string.Empty;

            openFileDialog1.InitialDirectory = "c:\\";
            openFileDialog1.Filter = "txt files (*.txt)|*.txt|All files (*.*)|*.*";
            openFileDialog1.FilterIndex = 2;
            openFileDialog1.RestoreDirectory = true;

            if(openFileDialog1.ShowDialog() == DialogResult.OK) {
                //Get the path of specified file
                filePath = openFileDialog1.FileName;

                //Read the contents of the file into a stream
                var fileStream = openFileDialog1.OpenFile();

                using(StreamReader reader = new StreamReader(fileStream, Encoding.ASCII)) {
                    char[] buffer = new char[16];
                    int n = reader.ReadBlock(buffer, 0, 16);
                    char[] result = new char[n];
                    Array.Copy(buffer, result, n);
                    if(new string(result) != magic) {
                        MessageBox.Show("Неправильный файл", new string(result), MessageBoxButtons.OK);
                        return;
                    }
                }
            }*/
        }

        private void ToolStripButton5_Click(object sender, EventArgs e) {
            var fileContent = string.Empty;

            FileStream fileStream = null;

            openFileDialog1.InitialDirectory = "c:\\";
            openFileDialog1.Filter = "Antimalware Base (*.amb)|*.amb|All files (*.*)|*.*";
            openFileDialog1.FilterIndex = 1;
            openFileDialog1.RestoreDirectory = true;

            if(openFileDialog1.ShowDialog() == DialogResult.OK) {
                //Get the path of specified file
                filePath = openFileDialog1.FileName;

                //Read the contents of the file into a stream
                fileStream = File.Open(openFileDialog1.FileName, FileMode.Open);

                using(StreamReader reader = new StreamReader(fileStream, Encoding.ASCII)) {
                    char[] buffer = new char[16];
                    int n = reader.ReadBlock(buffer, 0, 16);
                    char[] result = new char[n];
                    Array.Copy(buffer, result, n);
                    if(new string(result) != magic) {
                        DialogResult res = MessageBox.Show("Неправильный файл! Добавить магическое значение?", "Информация", MessageBoxButtons.OKCancel);
                        if(res == DialogResult.OK) {
                            DialogResult res1 = MessageBox.Show("Точно? Это действие перезапишет файл!", "Предупреждение", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning);
                            if(res1 == DialogResult.OK) {
                                fileStream.Seek(0, SeekOrigin.Begin);
                                fileStream.Write(Encoding.ASCII.GetBytes(magic), 0, 16);
                            }
                        } else {
                            return;
                        }
                    }
                    toolStripButton1.Enabled = true;
                    toolStripButton2.Enabled = true;
                    toolStripButton3.Enabled = true;
                    toolStripButton4.Enabled = true;
                }
                fileStream.Close();
            }
        }

        private void ToolStripButton2_Click(object sender, EventArgs e) {
            MessageBox.Show("todo");
        }

        private void ToolStripButton3_Click(object sender, EventArgs e) {
            DialogResult res1 = MessageBox.Show("Очистить?", "Предупреждение", MessageBoxButtons.OKCancel, MessageBoxIcon.Warning);
            if(res1 == DialogResult.OK) {
                FileStream fileStream = File.Open(Form1.filePath, FileMode.Create);
                fileStream.Seek(0, SeekOrigin.End);
                fileStream.Write(Encoding.ASCII.GetBytes(magic), 0, 16);
                fileStream.Close();
            }
        }

        private void ToolStripButton4_Click(object sender, EventArgs e) {
            Form3 f3 = new Form3();
            f3.Show();
        }
    }
}
