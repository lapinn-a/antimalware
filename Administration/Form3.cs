using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Administration {
    public partial class Form3 : Form {
        public Form3() {
            InitializeComponent();
        }

        private void Button1_Click(object sender, EventArgs e) {
            FileStream fileStream = File.Open(Form1.filePath, FileMode.Open);
            progressBar1.Maximum = (int)numericUpDown1.Value;
            for(int j = 0; j < numericUpDown1.Value; j++) {
                Random randNum = new Random();
                byte[] signature = { 0 };
                string name = textBox4.Text;
                if(checkBox1.Checked) {
                    int cnt = randNum.Next(0, 64);
                    for(int i = 0; i < cnt; i++) {
                        name += ((char)randNum.Next(97, 122)).ToString();
                    }
                }
                name += j.ToString();
                if(name.Length > 255) {
                    MessageBox.Show("Максимальная длина имени 255 символов");
                    return;
                }
                Byte nameLength = (Byte)name.Length;
                byte[] bytes = new byte[randNum.Next(8, 255)];
                for(int i = 0; i < bytes.Length; i++) {
                    bytes[i] = (byte)randNum.Next(0, 255);
                }
                if(bytes.Length > 255) {
                    MessageBox.Show("Максимальная длина кода 255 символов");
                    return;
                }
                Byte[] length = { (Byte)bytes.Length };
                SHA256 sha256Hash = SHA256.Create();
                byte[] hash = sha256Hash.ComputeHash(bytes, 0, length[0]).Reverse().ToArray();
                UInt64 begin = Decimal.ToUInt64(randNum.Next(0, 131071));
                UInt64 end = Decimal.ToUInt64(randNum.Next(0, 131071));
                signature[0] = nameLength;

                signature = signature.Concat(Encoding.ASCII.GetBytes(name)).Concat(bytes.Take(8)).Concat(length).Concat(hash).Concat(BitConverter.GetBytes(begin)).Concat(BitConverter.GetBytes(end)).ToArray();

                //StringBuilder hex = new StringBuilder(signature.Length * 3);
                //foreach(byte b in signature)
                //    hex.AppendFormat("{0:x2} ", b);
                //MessageBox.Show(hex.ToString());
                fileStream.Seek(0, SeekOrigin.End);
                fileStream.Write(signature, 0, signature.Length);
                progressBar1.Value++;
            }
            fileStream.Close();
            MessageBox.Show("Готово");
        }
    }
}
