using Shell32;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.IO.Pipes;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Interface {
    public partial class Form1 : Form {
        private static NamedPipeClientStream client;
        private static StreamReader reader;
        private static StreamWriter writer;
        public static Shell shell = new Shell();
        public static Folder RecyclingBin = shell.NameSpace(10);

        public Form1() {
            InitializeComponent();
        }
        public void ThreadProc() {
            /*string temp;
            do {
                temp = reader.ReadLine();
                Console.WriteLine(temp);
                if(temp.Contains('?')) {
                    var spl = temp.Split('?');
                    Console.WriteLine("File: {0} Status: {1}", spl[0], spl[1]);
                    dataGridView2.Rows.Add(spl[0], spl[1], "Удалить", "Карантин");
                }
            } while(temp != "DONE");
            Console.WriteLine("ok");*/
        }

        private void Form1_FormClosed(object sender, FormClosedEventArgs e) {
            Application.Exit();
        }

        private void Button1_Click(object sender, EventArgs e) {
            for(int i = 0; i < dataGridView1.Rows.Count - 1; i++) {
                if(((string)dataGridView1.Rows[i].Cells[0].Value).Length != 0) {
                    string input = "SCAN" + dataGridView1.Rows[i].Cells[0].Value + char.MinValue;
                    Console.WriteLine(input);
                    writer.WriteLine(input);
                    writer.Flush();
                    string temp;
                    do {
                        temp = reader.ReadLine();
                        Console.WriteLine(temp);
                        if(temp.Contains('?')) {
                            var spl = temp.Split('?');
                            Console.WriteLine("File: {0} Status: {1}", spl[0], spl[1]);
                            dataGridView2.Rows.Add(spl[0], spl[1], "Удалить"/*, "Карантин"*/);
                        }
                    } while(temp != "DONE");
                    Console.WriteLine("ok");
                }
            }
        }

        private void Form1_Load(object sender, EventArgs e) {
            client = new NamedPipeClientStream("MTUCI_Antimalware_pipe");
            client.Connect(5000);
            reader = new StreamReader(client);
            writer = new StreamWriter(client);
        }

        private void RadioButton1_CheckedChanged(object sender, EventArgs e) {
            tabControl1.SelectTab(0);
        }

        private void RadioButton2_CheckedChanged(object sender, EventArgs e) {
            tabControl1.SelectTab(1);
        }

        private void Button2_Click(object sender, EventArgs e) {
            openFileDialog1.ValidateNames = true;
            openFileDialog1.CheckFileExists = true;
            openFileDialog1.CheckPathExists = true;
            // Always default to Folder Selection.
            openFileDialog1.FileName = "";
            if(openFileDialog1.ShowDialog() == DialogResult.OK) {
                //Get the path of specified file
                var filePath = openFileDialog1.FileName;
                DataGridViewRow row = (DataGridViewRow)dataGridView1.Rows[0].Clone();
                row.Cells[0].Value = filePath;
                dataGridView1.Rows.Add(row);
            }
        }

        private void Button3_Click(object sender, EventArgs e) {
            openFileDialog1.ValidateNames = false;
            openFileDialog1.CheckFileExists = false;
            openFileDialog1.CheckPathExists = true;
            // Always default to Folder Selection.
            openFileDialog1.FileName = "Select folder";
            if(openFileDialog1.ShowDialog() == DialogResult.OK) {
                //Get the path of specified file
                var filePath = Path.GetDirectoryName(openFileDialog1.FileName);
                DataGridViewRow row = (DataGridViewRow)dataGridView1.Rows[0].Clone();
                row.Cells[0].Value = filePath;
                dataGridView1.Rows.Add(row);
            }
        }

        private void DataGridView2_CellContentClick(object sender, DataGridViewCellEventArgs e) {
            var senderGrid = (DataGridView)sender;

            if(senderGrid.Columns[e.ColumnIndex] is DataGridViewButtonColumn && e.RowIndex >= 0) {
                if(e.ColumnIndex == 2) { // удалить
                    string fileName = senderGrid.Rows[e.RowIndex].Cells[0].Value.ToString();
                    Console.WriteLine(fileName);
                    RecyclingBin.MoveHere(fileName);
                }
            }
        }
    }
}
