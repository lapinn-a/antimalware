using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.ServiceProcess;

namespace Interface {

    enum Result {
        unknown,
        serviceManager_AccessDenied,
        serviceManager_DatabaseDoesNotExist,
        service_AccessDenied,
        service_InvalidServiceManagerHandle,
        service_InvalidServiceName,
        service_DoesNotExist,
        service_Exist
    };

    public partial class Loading : Form {

        void CheckService() {

        }

        void InstallService() {

        }

        void Initialization() {
            label1.Text = "Проверка наличия службы...";
            ServiceController ctl = ServiceController.GetServices().FirstOrDefault(s => s.ServiceName == "MTUCI_AntimalwareService");
            if(ctl == null) {
                DialogResult res = MessageBox.Show("Служба анитвируса не установлена! Установить службу антивируса?", "Информация", MessageBoxButtons.OKCancel, MessageBoxIcon.Information);
                if(res == DialogResult.OK) {
                    label1.Text = "Установка службы...";
                    System.Diagnostics.Process installProcess = new System.Diagnostics.Process();
                    installProcess.StartInfo.FileName = "Service.exe";
                    installProcess.StartInfo.Arguments = "install";

                    installProcess.Start();

                    installProcess.WaitForExit();
                    if(installProcess.ExitCode != 0) {
                        Application.Exit();
                    }
                    ctl = ServiceController.GetServices().FirstOrDefault(s => s.ServiceName == "MTUCI_AntimalwareService");
                } else {
                    Application.Exit();
                }
            }
            label1.Text = "Проверка работы службы...";
            if((ctl.Status.Equals(ServiceControllerStatus.Stopped)) || (ctl.Status.Equals(ServiceControllerStatus.StopPending))) {
                label1.Text = "Запуск службы...";
                try {
                    ctl.Start();
                } catch(InvalidOperationException) {
                    MessageBox.Show("Не удалось запустить службу!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            label1.Text = "Ожидание запуска службы...";
            ctl.WaitForStatus(ServiceControllerStatus.Running);
            label1.Text = "Служба запущена!";
            Form1 f1 = new Form1();
            f1.Show();
            this.Hide();
        }

        public Loading() {
            InitializeComponent();
        }

        private void Loading_Shown(object sender, EventArgs e) {
            Initialization();
        }
    }
}
